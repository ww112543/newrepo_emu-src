name: yuzu Build MinGW (linux) test

on:
  workflow_call:
    inputs:
      compiler:
        description: 'Select compiler.'
        type: string
        required: false
        default: 'clang'
      polly:
        description: 'Load polly plugin.Required clang.'
        type: boolean
        required: false
        default: false
      flag:
        description: 'Compiler flags.'
        type: string
        required: false
        default: ''
      suffix:
        description: 'Build suffix.'
        type: string
        required: false
        default: ''
  workflow_dispatch:
    inputs:
      compiler:
        description: 'Select compiler.'
        type: choice
        options:
        - clang
        - gcc
      polly:
        description: 'Load polly plugin.Required clang.'
        type: boolean
        required: false
        default: false
      flag:
        description: 'Compiler flags.'
        type: string
        required: false
        default: ''
      suffix:
        description: 'Build suffix.'
        type: string
        required: false
        default: ''

jobs:
  build:
    name: Building yuzu Binaries with MinGW (linux) test
    runs-on: ubuntu-latest
    env:
      COMPILER: ${{ (inputs || github.event.inputs).compiler }}
      build-suffix: ${{ (inputs || github.event.inputs).suffix }}
    container:
      image: yuzuemu/build-environments:linux-mingw
      options: -u 1001
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      #Set short SHA
      - name: Set short SHA outputs
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Remove space for cache key
        id: nospace
        run: |
          var="${{ (inputs || github.event.inputs).flag }}"
          echo "::set-output name=flag::${var// /}"

      - name: Set up cache
        uses: actions/cache@v3
        id: ccache-restore
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-mingwcross${{ steps.nospace.outputs.flag }}-${{ env.COMPILER }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-mingwcross${{ steps.nospace.outputs.flag }}-${{ env.COMPILER }}-

      - name: Create ccache directory
        if: steps.ccache-restore.outputs.cache-hit != 'true'
        run: mkdir -p ~/.ccache

      #Preparing Build
      #Note: qtwebengine does not support with this toolchain
      - name: Before Build
        env:
          ENABLE_COMPATIBILITY_REPORTING: "ON"
          REF_NAME: ${{ github.ref_name }}
          SHA_SHORT: ${{ steps.vars.outputs.sha_short }}
          COMP_FLAG: ${{ (inputs || github.event.inputs).flag }}
          POLLY_ENABLE: ${{ (inputs || github.event.inputs).polly }}
        run: |
          ./.github/docker/scripts/linux-mingw/pre-build.sh

      - name: Build
        run: |
          cd build
          ninja yuzu yuzu-cmd

      - name: After Build
        run: |
          ./.github/docker/scripts/linux-mingw/post-build.sh

      - name: Compress the Build Folder
        run: |
          mkdir -p "yuzu-build/yuzu-${{ steps.vars.outputs.sha_short }}-mingwcross"
          cp -r --preserve=timestamps package/* "yuzu-build/yuzu-${{ steps.vars.outputs.sha_short }}-mingwcross"
          7z a -t7z "yuzu-ea-${{ github.ref_name }}-${{ steps.vars.outputs.sha_short }}-mingwcross${{ env.build-suffix }}-${{ env.COMPILER }}.7z" -m0=lzma2:d=64m -mx=9 -aoa -mfb=64 -md=32m -ms=on "yuzu-build/*"

      #Upload Artifacts
      - name: Making artifact
        uses: actions/upload-artifact@v3
        with:
          name: yuzu-ea-${{ steps.vars.outputs.sha_short }}-mingwcross${{ env.build-suffix }}-${{ env.COMPILER }}
          path: yuzu-ea-${{ github.ref_name }}-${{ steps.vars.outputs.sha_short }}-mingwcross${{ env.build-suffix }}-${{ env.COMPILER }}.7z
          retention-days: 7

#     - name: Pack
#       run: ./.github/docker/scripts/linux-mingw/upload.sh
#       env:
#         NO_SOURCE_PACK: "YES"

#     - name: Upload
#       uses: actions/upload-artifact@v3
#       with:
#         name: yuzu-ea-${{ steps.vars.outputs.sha_short }}-mingwcross
#         path: artifacts/
